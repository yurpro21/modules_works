odoo.define("whatsapp_connector.BasicController",(function(require){"use strict";var BasicController=require("web.BasicController");return BasicController.include({_discardChanges:function(recordID,options){return this._super(recordID,options).then((_x=>{if(this.acrux_widget){let env=this.model.get(this.handle,{env:!0});recordID||env.currentId||this.acrux_widget.discardChange()}return _x}))},update:function(params,options){return this._super(params,options).then((_x=>{if(this.acrux_widget){let record=this.model.get(this.handle,{env:!1});return this.acrux_widget.recordUpdated(record).then((()=>_x))}return _x}))},_pushState:function(state){this.model.get(this.handle).getContext().is_acrux_chat_room||this._super(state)},saveRecord:function(recordID,options){return this._super(recordID,options).then((_x=>{let action={};if(this.getParent().props&&this.getParent().props.viewParams&&(action=this.getParent().props.viewParams.action),action.acrux_init_conv){let env=this.model.get(this.handle,{env:!0});action.acrux_init_conv(env.currentId)}if(this.acrux_widget){let record=this.model.get(this.handle,{env:!1});return this.acrux_widget.recordSaved(record).then((()=>_x))}return _x}))},_onFieldChanged:function(event){if(event?.data?.dataPointID){const model=event.data.dataPointID.split("_")[0];if(this.modelName!==model){const backFunc=event.data.onSuccess||function(){};event.data.onSuccess=()=>{let prom;if(this.acrux_widget){let record=this.model.get(this.handle,{env:!1});prom=this.acrux_widget.recordSaved(record)}else prom=Promise.resolve();prom.then(backFunc)}}}return this._super(event)},_abandonRecord:function(recordID){this.acrux_widget?(recordID=recordID||this.handle)!==this.handle&&this._super(recordID):this._super(recordID)}}),BasicController}));