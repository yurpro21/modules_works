odoo.define("whatsapp_connector.init_conversation",(function(require){"use strict";var core=require("web.core"),Widget=require("web.Widget"),Conversation=require("whatsapp_connector.conversation"),QWeb=core.qweb,_t=core._t,InitConversation=Widget.extend({template:"acrux_chat_init_conversation",events:{"click .o_button_conv_search":"searchConversation","keypress .conv_search":"onKeypress","click .o_button_create_conversation":"createConversation","click .o_acrux_chat_conv_items > .o_conv_record":"selectConversation"},init:function(parent,options){this._super.apply(this,arguments),this.parent=parent,this.options=_.extend({},options),this.context=_.extend({},this.parent.context||{},this.options.context),this.conv_list=this.options.conv_list||[]},start:function(){return this._super().then((()=>this._initRender()))},_initRender:function(){return this.$input_search=this.$("input.conv_search"),this.$conv_items=this.$(".o_acrux_chat_conv_items"),this.renderConvList(),Promise.resolve()},update:function(new_conv){if(this.conv_list){let conv=this.conv_list.find((x=>x.id==new_conv.id));if(conv){let tmp=this.postProcessorResult([Object.assign({},new_conv)])[0];Object.assign(conv,tmp)}}},renderConvList:function(){let html=QWeb.render("acrux_chat_conv_list",{conv_list:this.conv_list});this.$conv_items.html(html)},getSearchDomain:function(){let val=this.$input_search.val().trim();return["|","|",["name","ilike",val],["number_format","ilike",val],["number","ilike",val]]},searchConversation:function(){let domain,val=this.$input_search.val();return domain=val&&""!=val.trim()?this.getSearchDomain():[],this._rpc({model:this.parent.model,method:"search_read",args:[domain,this.parent.conversation_used_fields,0,100],context:this.context}).then((result=>{result=this.postProcessorResult(result),this.conv_list=result,this.renderConvList()}))},postProcessorResult:function(result){return result.map((conv=>(conv.getIconClass=Conversation.prototype.getIconClass.bind(conv),conv)))},selectConversation:function(event){let conversation_id=$(event.currentTarget).data("id");return this.initAndNotify(conversation_id)},initAndNotify:function(conversation_id){return this._rpc({model:this.parent.model,method:"init_and_notify",args:[[conversation_id]],context:this.context})},onKeypress:function(event){13===event.which&&$(event.currentTarget).hasClass("conv_search")&&(event.preventDefault(),this.searchConversation())},empty:function(){this.$input_search.val(""),this.$conv_items.html(""),this.conv_list=[]},createConversation:function(event){let context;context=event&&event.context?event.context:this.context;let action={type:"ir.actions.act_window",name:_t("Create"),view_type:"form",view_mode:"form",res_model:this.parent.model,views:[[!1,"form"]],target:"new",context,acrux_init_conv:recordID=>{recordID&&this.initAndNotify(recordID).then((()=>{this.do_action({type:"ir.actions.act_window_close"})}))}};return this.do_action(action)}});return InitConversation}));